[{"/Users/jerry/Desktop/trading-history/client/src/index.js":"1","/Users/jerry/Desktop/trading-history/client/src/history.js":"2","/Users/jerry/Desktop/trading-history/client/src/constants/api.js":"3","/Users/jerry/Desktop/trading-history/client/src/services/auth.js":"4","/Users/jerry/Desktop/trading-history/client/src/redux/actions/auth.js":"5","/Users/jerry/Desktop/trading-history/client/src/Layout/index.js":"6","/Users/jerry/Desktop/trading-history/client/src/Layout/layout.js":"7","/Users/jerry/Desktop/trading-history/client/src/services/api.js":"8","/Users/jerry/Desktop/trading-history/client/src/services/token.js":"9","/Users/jerry/Desktop/trading-history/client/src/pages/Login/Login.js":"10","/Users/jerry/Desktop/trading-history/client/src/routes.js":"11","/Users/jerry/Desktop/trading-history/client/src/App.js":"12","/Users/jerry/Desktop/trading-history/client/src/pages/Sign-up/Signup.js":"13","/Users/jerry/Desktop/trading-history/client/src/pages/Home.js":"14","/Users/jerry/Desktop/trading-history/client/src/serviceWorker.js":"15","/Users/jerry/Desktop/trading-history/client/src/components/Header.js":"16","/Users/jerry/Desktop/trading-history/client/src/redux/actionTypes/auth.js":"17","/Users/jerry/Desktop/trading-history/client/src/pages/Sign-up/index.js":"18","/Users/jerry/Desktop/trading-history/client/src/components/Sidebar.js":"19","/Users/jerry/Desktop/trading-history/client/src/pages/Dashboard/Dashboard.js":"20"},{"size":619,"mtime":1608423358293,"results":"21","hashOfConfig":"22"},{"size":114,"mtime":1608457099379,"results":"23","hashOfConfig":"22"},{"size":120,"mtime":1608457432840,"results":"24","hashOfConfig":"22"},{"size":314,"mtime":1608457803267,"results":"25","hashOfConfig":"22"},{"size":1697,"mtime":1608481839727,"results":"26","hashOfConfig":"22"},{"size":429,"mtime":1608457627049,"results":"27","hashOfConfig":"22"},{"size":1600,"mtime":1610375917909,"results":"28","hashOfConfig":"22"},{"size":368,"mtime":1608481778258,"results":"29","hashOfConfig":"22"},{"size":150,"mtime":1608481877433,"results":"30","hashOfConfig":"22"},{"size":4010,"mtime":1608501254990,"results":"31","hashOfConfig":"22"},{"size":623,"mtime":1610376223815,"results":"32","hashOfConfig":"22"},{"size":1607,"mtime":1610369268630,"results":"33","hashOfConfig":"22"},{"size":4615,"mtime":1608486063436,"results":"34","hashOfConfig":"22"},{"size":4435,"mtime":1608486225731,"results":"35","hashOfConfig":"22"},{"size":5903,"mtime":1608424499590,"results":"36","hashOfConfig":"22"},{"size":1007,"mtime":1610372617882,"results":"37","hashOfConfig":"22"},{"size":140,"mtime":1606656763887,"results":"38","hashOfConfig":"22"},{"size":545,"mtime":1608424499590,"results":"39","hashOfConfig":"22"},{"size":515,"mtime":1610375224184,"results":"40","hashOfConfig":"22"},{"size":988,"mtime":1610377762936,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hq6d0a",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":3,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jerry/Desktop/trading-history/client/src/index.js",[],"/Users/jerry/Desktop/trading-history/client/src/history.js",[],"/Users/jerry/Desktop/trading-history/client/src/constants/api.js",[],"/Users/jerry/Desktop/trading-history/client/src/services/auth.js",[],"/Users/jerry/Desktop/trading-history/client/src/redux/actions/auth.js",[],"/Users/jerry/Desktop/trading-history/client/src/Layout/index.js",[],"/Users/jerry/Desktop/trading-history/client/src/Layout/layout.js",[],"/Users/jerry/Desktop/trading-history/client/src/services/api.js",[],"/Users/jerry/Desktop/trading-history/client/src/services/token.js",[],"/Users/jerry/Desktop/trading-history/client/src/pages/Login/Login.js",[],"/Users/jerry/Desktop/trading-history/client/src/routes.js",[],"/Users/jerry/Desktop/trading-history/client/src/App.js",[],"/Users/jerry/Desktop/trading-history/client/src/pages/Sign-up/Signup.js",[],"/Users/jerry/Desktop/trading-history/client/src/pages/Home.js",["83","84"],"/Users/jerry/Desktop/trading-history/client/src/serviceWorker.js",["85","86","87","88","89","90","91","92","93"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","/Users/jerry/Desktop/trading-history/client/src/components/Header.js",[],"/Users/jerry/Desktop/trading-history/client/src/redux/actionTypes/auth.js",[],"/Users/jerry/Desktop/trading-history/client/src/pages/Sign-up/index.js",[],"/Users/jerry/Desktop/trading-history/client/src/components/Sidebar.js",[],"/Users/jerry/Desktop/trading-history/client/src/pages/Dashboard/Dashboard.js",[],{"ruleId":"94","severity":2,"message":"95","line":6,"column":17,"nodeType":"96","endLine":6,"endColumn":25},{"ruleId":"97","severity":2,"message":"98","line":6,"column":17,"nodeType":"99","messageId":"100","endLine":6,"endColumn":25},{"ruleId":"101","severity":2,"message":"102","line":37,"column":17,"nodeType":"99","messageId":"103","endLine":37,"endColumn":40},{"ruleId":"104","severity":1,"message":"105","line":42,"column":21,"nodeType":"106","messageId":"107","endLine":42,"endColumn":32},{"ruleId":"101","severity":2,"message":"108","line":49,"column":17,"nodeType":"99","messageId":"103","endLine":49,"endColumn":32},{"ruleId":"109","severity":2,"message":"110","line":59,"column":13,"nodeType":"99","messageId":"111","endLine":59,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":70,"column":29,"nodeType":"106","messageId":"107","endLine":70,"endColumn":40},{"ruleId":"104","severity":1,"message":"105","line":83,"column":29,"nodeType":"106","messageId":"107","endLine":83,"endColumn":40},{"ruleId":"104","severity":1,"message":"105","line":95,"column":13,"nodeType":"106","messageId":"107","endLine":95,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":123,"column":13,"nodeType":"106","messageId":"107","endLine":123,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":134,"column":17,"nodeType":"106","messageId":"107","endLine":134,"endColumn":30},"react/prop-types","'children' is missing in props validation","Property","no-unused-vars","'children' is defined but never used.","Identifier","unusedVar","no-use-before-define","'checkValidServiceWorker' was used before it was defined.","usedBeforeDefined","no-console","Unexpected console statement.","MemberExpression","unexpected","'registerValidSW' was used before it was defined.","no-param-reassign","Assignment to property of function parameter 'registration'.","assignmentToFunctionParamProp"]